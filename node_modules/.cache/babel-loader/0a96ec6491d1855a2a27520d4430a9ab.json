{"ast":null,"code":"var _jsxFileName = \"/home/aplahr/Development/code/p5/solar-travel-frontend/src/Destinations/DestinationsContainer.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport addDestination from '../actions/AddDestinations';\nimport Destination from '../Components/Destination';\nimport Form from '../Components/Form';\nimport fetchDestinations from '../actions/FetchDestinations';\nimport { filterHotDestinations, filterWarmDestinations, filterColdDestinations } from '../actions/FilterDestinations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DestinationsContainer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      destinations: [],\n      temperature: '',\n      distance: '',\n      gravity: ''\n    };\n  }\n\n  handleSubmit(destination) {\n    let newDestination = destination;\n    newDestination.itinerary_id = 2;\n    this.props.addDestination(newDestination);\n    this.props.history.push(\"/itinerary\");\n  } // handleFilter(event){\n  //   event.preventDefault();\n  //   debugger\n  //     switch (event.target.value) {\n  //     case \"any\":\n  //         return this.props.fetchDestinations()\n  //     case \"hot\":\n  //       return this.props.fetchDestinations() + this.props.filterHotDestinations()\n  //     case \"warm\":\n  //       return this.props.fetchDestinations() + this.props.filterWarmDestinations()\n  //     case \"cold\":\n  //      return this.props.fetchDestinations() + this.props.filterColdDestinations()\n  //      default:\n  //         return this.props.destinations\n  //     }\n  // }\n\n\n  render() {\n    debugger;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"destComponentContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formContainer\",\n        children: [\"/\", /*#__PURE__*/_jsxDEV(Form, {\n          handleFilter: this.handleFilter.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"destContainer\",\n        children: this.props.destinations.map(destination => /*#__PURE__*/_jsxDEV(Destination, {\n          destination: destination,\n          handleSubmit: () => this.handleSubmit(destination)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    destinations: state.destinations\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, {\n  addDestination,\n  fetchDestinations,\n  filterHotDestinations,\n  filterWarmDestinations,\n  filterColdDestinations\n})(DestinationsContainer));","map":{"version":3,"sources":["/home/aplahr/Development/code/p5/solar-travel-frontend/src/Destinations/DestinationsContainer.js"],"names":["React","Component","withRouter","connect","addDestination","Destination","Form","fetchDestinations","filterHotDestinations","filterWarmDestinations","filterColdDestinations","DestinationsContainer","constructor","state","destinations","temperature","distance","gravity","handleSubmit","destination","newDestination","itinerary_id","props","history","push","render","handleFilter","bind","map","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA4B,4BAA5B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AACA,SAAQC,qBAAR,EAA+BC,sBAA/B,EAAuDC,sBAAvD,QAAoF,+BAApF;;;AAEA,MAAMC,qBAAN,SAAoCV,SAApC,CAA8C;AAE5CW,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,EADH;AAEXC,MAAAA,WAAW,EAAE,EAFF;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,OAAO,EAAE;AAJE,KAAb;AAMD;;AAGCC,EAAAA,YAAY,CAACC,WAAD,EAAc;AACxB,QAAIC,cAAc,GAAGD,WAArB;AACAC,IAAAA,cAAc,CAACC,YAAf,GAA8B,CAA9B;AACA,SAAKC,KAAL,CAAWlB,cAAX,CAA0BgB,cAA1B;AACA,SAAKE,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACD,GAlByC,CAsB1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;;;AAEAC,EAAAA,MAAM,GAAG;AACP;AACE,wBACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,qCACG,QAAC,IAAD;AAAM,UAAA,YAAY,EAAE,KAAKC,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB;AAApB;AAAA;AAAA;AAAA;AAAA,gBADH;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAII;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBACK,KAAKL,KAAL,CAAWR,YAAX,CAAwBc,GAAxB,CAA6BT,WAAD,iBAC/B,QAAC,WAAD;AAAa,UAAA,WAAW,EAAEA,WAA1B;AAAuC,UAAA,YAAY,EAAE,MAAM,KAAKD,YAAL,CAAkBC,WAAlB;AAA3D;AAAA;AAAA;AAAA;AAAA,gBADG;AADL;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWL;;AAvD2C;;AA2D9C,SAASU,eAAT,CAAyBhB,KAAzB,EAAgC;AAC5B,SAAO;AAACC,IAAAA,YAAY,EAAED,KAAK,CAACC;AAArB,GAAP;AACD;;AAEH,eAAeZ,UAAU,CAACC,OAAO,CAAC0B,eAAD,EAAkB;AAACzB,EAAAA,cAAD;AAAiBG,EAAAA,iBAAjB;AAAoCC,EAAAA,qBAApC;AAA2DC,EAAAA,sBAA3D;AAAmFC,EAAAA;AAAnF,CAAlB,CAAP,CAAqIC,qBAArI,CAAD,CAAzB","sourcesContent":["import React, {Component} from 'react'\nimport {withRouter} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport addDestination from  '../actions/AddDestinations'\nimport Destination from '../Components/Destination'\nimport Form from '../Components/Form'\nimport fetchDestinations from '../actions/FetchDestinations'\nimport {filterHotDestinations, filterWarmDestinations, filterColdDestinations} from '../actions/FilterDestinations'\n\nclass DestinationsContainer extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      destinations: [],\n      temperature: '',\n      distance: '',\n      gravity: ''\n    }\n  }\n\n\n    handleSubmit(destination) {\n      let newDestination = destination;\n      newDestination.itinerary_id = 2;\n      this.props.addDestination(newDestination)\n      this.props.history.push(\"/itinerary\")\n    }\n\n    \n    \n    // handleFilter(event){\n    //   event.preventDefault();\n    //   debugger\n    //     switch (event.target.value) {\n    //     case \"any\":\n    //         return this.props.fetchDestinations()\n    //     case \"hot\":\n    //       return this.props.fetchDestinations() + this.props.filterHotDestinations()\n    //     case \"warm\":\n    //       return this.props.fetchDestinations() + this.props.filterWarmDestinations()\n    //     case \"cold\":\n    //      return this.props.fetchDestinations() + this.props.filterColdDestinations()\n    //      default:\n    //         return this.props.destinations\n\n    //     }\n\n\n    // }\n\n    render() {\n      debugger\n        return (\n          <div className=\"destComponentContainer\">\n            <div className=\"formContainer\">\n              /<Form handleFilter={this.handleFilter.bind(this)}/>\n            </div>\n              <div className=\"destContainer\">\n                  {this.props.destinations.map((destination) => \n                <Destination destination={destination} handleSubmit={() => this.handleSubmit(destination)}/>)}\n              </div>\n          </div>\n        )\n  }\n}\n\n\nfunction mapStateToProps(state) {\n    return {destinations: state.destinations}\n  }\n\nexport default withRouter(connect(mapStateToProps, {addDestination, fetchDestinations, filterHotDestinations, filterWarmDestinations, filterColdDestinations})(DestinationsContainer))"]},"metadata":{},"sourceType":"module"}