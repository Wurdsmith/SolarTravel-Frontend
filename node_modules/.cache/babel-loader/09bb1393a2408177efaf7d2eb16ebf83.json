{"ast":null,"code":"var _jsxFileName = \"/home/aplahr/Development/code/p5/solar-travel-frontend/src/Destinations/AddedDestinationsContainer.js\";\nimport '../App.css';\nimport React, { Component } from 'react';\nimport AddedDestinations from '../Components/AddedDestinations';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport deleteAddedDestination from '../actions/DeleteAddedDestination';\nimport Ships from '../Components/Ships';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddedDestinationsContainer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ship: false\n    };\n  }\n\n  handleChange(event) {\n    // Sets the state depending on what ship is chosen, rendering the DOM differently for each.\n    switch (event.target.value) {\n      case \"enterprise\":\n        return this.setState({\n          ship: false\n        });\n\n      case \"odyssey\":\n        return this.setState({\n          ship: true\n        });\n\n      default:\n        return this.state;\n    }\n  }\n\n  handleDelete(destination) {\n    // Deletes the selected destinations object from the addedDestinations array, and thus, the DOM.\n    let destinationId = destination.id;\n    this.props.deleteAddedDestination(destinationId);\n    this.props.history.push(\"/itinerary\");\n  }\n\n  render() {\n    if (this.props.addedDestinations > 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shipContainer\",\n        children: /*#__PURE__*/_jsxDEV(Ships, {\n          handleChange: event => this.handleChange(event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"addedDestContainer\",\n        children: this.props.addedDestinations.map(destination => /*#__PURE__*/_jsxDEV(AddedDestinations, {\n          addedDestination: destination,\n          handleDelete: () => this.handleDelete(destination),\n          shipType: this.state.ship\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this);else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"emptyItinerary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Looks like you havent added any destinations to your itinerary yet! Visit the \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"home-link\",\n            children: \"homepage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 94\n          }, this), \" to add your first destination.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://images.theconversation.com/files/381158/original/file-20210128-21-1iu0ae0.jpg?ixlib=rb-1.1.0&q=45&auto=format&w=754&fit=clip\",\n          alt: \"Return hhome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this);\n    }\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    addedDestinations: state.allDestinations.addedDestinations\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, {\n  deleteAddedDestination\n})(AddedDestinationsContainer));","map":{"version":3,"sources":["/home/aplahr/Development/code/p5/solar-travel-frontend/src/Destinations/AddedDestinationsContainer.js"],"names":["React","Component","AddedDestinations","withRouter","connect","deleteAddedDestination","Ships","Link","AddedDestinationsContainer","constructor","state","ship","handleChange","event","target","value","setState","handleDelete","destination","destinationId","id","props","history","push","render","addedDestinations","map","mapStateToProps","allDestinations"],"mappings":";AAAA,OAAO,YAAP;AACA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,sBAAP,MAAmC,mCAAnC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;;AAEA,MAAMC,0BAAN,SAAyCP,SAAzC,CAAmD;AAEjDQ,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGD;;AAECC,EAAAA,YAAY,CAACC,KAAD,EAAO;AAAE;AACnB,YAAQA,KAAK,CAACC,MAAN,CAAaC,KAArB;AACE,WAAK,YAAL;AACE,eAAO,KAAKC,QAAL,CAAc;AACnBL,UAAAA,IAAI,EAAE;AADa,SAAd,CAAP;;AAGF,WAAK,SAAL;AACE,eAAO,KAAKK,QAAL,CAAc;AACnBL,UAAAA,IAAI,EAAE;AADa,SAAd,CAAP;;AAGF;AACE,eAAO,KAAKD,KAAZ;AAVJ;AAYH;;AAECO,EAAAA,YAAY,CAACC,WAAD,EAAa;AAAE;AAC3B,QAAIC,aAAa,GAAGD,WAAW,CAACE,EAAhC;AACA,SAAKC,KAAL,CAAWhB,sBAAX,CAAkCc,aAAlC;AACA,SAAKE,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACD;;AAECC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKH,KAAL,CAAWI,iBAAX,GAA+B,CAAnC,EACE,oBACE;AAAA,8BACE;AAAK,QAAA,SAAS,EAAG,eAAjB;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,YAAY,EAAIZ,KAAD,IAAW,KAAKD,YAAL,CAAkBC,KAAlB;AAAjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,kBACK,KAAKQ,KAAL,CAAWI,iBAAX,CAA6BC,GAA7B,CAAkCR,WAAD,iBAClC,QAAC,iBAAD;AAAmB,UAAA,gBAAgB,EAAEA,WAArC;AAAkD,UAAA,YAAY,EAAE,MAAM,KAAKD,YAAL,CAAkBC,WAAlB,CAAtE;AAAsG,UAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWC;AAA3H;AAAA;AAAA;AAAA;AAAA,gBADC;AADL;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,KAYI;AACF,0BACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACA;AAAA,oHAAmF,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,GAAT;AAAa,YAAA,SAAS,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAnF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAK,UAAA,GAAG,EAAC,sIAAT;AAAgJ,UAAA,GAAG,EAAC;AAApJ;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAMD;AACJ;;AAnDgD;;AAuDnD,SAASgB,eAAT,CAAyBjB,KAAzB,EAAgC;AAC5B,SAAO;AAACe,IAAAA,iBAAiB,EAAEf,KAAK,CAACkB,eAAN,CAAsBH;AAA1C,GAAP;AACD;;AAEH,eAAetB,UAAU,CAACC,OAAO,CAACuB,eAAD,EAAkB;AAACtB,EAAAA;AAAD,CAAlB,CAAP,CAAmDG,0BAAnD,CAAD,CAAzB","sourcesContent":["import '../App.css';\nimport React, {Component} from 'react'\nimport AddedDestinations from '../Components/AddedDestinations'\nimport {withRouter} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport deleteAddedDestination from '../actions/DeleteAddedDestination'\nimport Ships from '../Components/Ships'\nimport {Link} from 'react-router-dom'\n\nclass AddedDestinationsContainer extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n        ship: false\n    }\n  }\n\n    handleChange(event){ // Sets the state depending on what ship is chosen, rendering the DOM differently for each.\n      switch (event.target.value) {\n        case \"enterprise\":\n          return this.setState({\n            ship: false\n          })\n        case \"odyssey\":\n          return this.setState({\n            ship: true\n          })\n        default:\n          return this.state\n    }\n  }\n\n    handleDelete(destination){ // Deletes the selected destinations object from the addedDestinations array, and thus, the DOM.\n    let destinationId = destination.id\n    this.props.deleteAddedDestination(destinationId)\n    this.props.history.push(\"/itinerary\")\n  }\n\n    render() {\n      if (this.props.addedDestinations > 0)\n        return (\n          <div>\n            <div className = \"shipContainer\">\n              <Ships handleChange= {(event) => this.handleChange(event)}/>\n            </div>\n            <div className=\"addedDestContainer\">\n                {this.props.addedDestinations.map((destination) => \n                <AddedDestinations addedDestination={destination} handleDelete={() => this.handleDelete(destination)} shipType={this.state.ship}/>)}\n            </div>\n          </div>\n        )\n      else{\n        return(\n          <div className=\"emptyItinerary\">\n          <h2>Looks like you havent added any destinations to your itinerary yet! Visit the {<Link to=\"/\" className='home-link'>homepage</Link>} to add your first destination.</h2>\n          <img src='https://images.theconversation.com/files/381158/original/file-20210128-21-1iu0ae0.jpg?ixlib=rb-1.1.0&q=45&auto=format&w=754&fit=clip' alt='Return hhome'></img>\n          </div>\n        )\n      }\n  }\n}\n\n\nfunction mapStateToProps(state) {\n    return {addedDestinations: state.allDestinations.addedDestinations}\n  }\n\nexport default withRouter(connect(mapStateToProps, {deleteAddedDestination})(AddedDestinationsContainer))"]},"metadata":{},"sourceType":"module"}