{"ast":null,"code":"var _jsxFileName = \"/home/aplahr/Development/code/p5/solar-travel-frontend/src/Destinations/DestinationsContainer.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport addDestination from '../actions/AddDestinations';\nimport Destination from '../Components/Destination';\nimport Form from '../Components/Form';\nimport fetchDestinations from '../actions/FetchDestinations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DestinationsContainer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      destinations: [],\n      temperature: '',\n      distance: '',\n      gravity: ''\n    };\n  }\n\n  handleSubmit(destination) {\n    let newDestination = destination;\n    newDestination.itinerary_id = 2;\n    this.props.addDestination(newDestination);\n    this.props.history.push(\"/itinerary\");\n  }\n\n  handleSort(event) {\n    event.preventDefault();\n    debugger;\n    this.props.fetchDestinations();\n    let allDests = this.props.destinations;\n\n    if (event.target.value === \"warm\") {\n      this.setState;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"destComponentContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formContainer\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          handleFilter: this.handleTempChange.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"destContainer\",\n        children: this.props.destinations.map(destination => /*#__PURE__*/_jsxDEV(Destination, {\n          destination: destination,\n          handleSubmit: () => this.handleSubmit(destination)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    destinations: state.destinations\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, {\n  addDestination,\n  fetchDestinations\n})(DestinationsContainer));","map":{"version":3,"sources":["/home/aplahr/Development/code/p5/solar-travel-frontend/src/Destinations/DestinationsContainer.js"],"names":["React","Component","withRouter","connect","addDestination","Destination","Form","fetchDestinations","DestinationsContainer","constructor","state","destinations","temperature","distance","gravity","handleSubmit","destination","newDestination","itinerary_id","props","history","push","handleSort","event","preventDefault","allDests","target","value","setState","render","handleTempChange","bind","map","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA4B,4BAA5B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;;;AAEA,MAAMC,qBAAN,SAAoCP,SAApC,CAA8C;AAE5CQ,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,EADH;AAEXC,MAAAA,WAAW,EAAE,EAFF;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,OAAO,EAAE;AAJE,KAAb;AAMD;;AAGCC,EAAAA,YAAY,CAACC,WAAD,EAAc;AACxB,QAAIC,cAAc,GAAGD,WAArB;AACAC,IAAAA,cAAc,CAACC,YAAf,GAA8B,CAA9B;AACA,SAAKC,KAAL,CAAWf,cAAX,CAA0Ba,cAA1B;AACA,SAAKE,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACD;;AAEDC,EAAAA,UAAU,CAACC,KAAD,EAAO;AACfA,IAAAA,KAAK,CAACC,cAAN;AACA;AACA,SAAKL,KAAL,CAAWZ,iBAAX;AACA,QAAIkB,QAAQ,GAAG,KAAKN,KAAL,CAAWR,YAA1B;;AACE,QAAIY,KAAK,CAACG,MAAN,CAAaC,KAAb,KAAuB,MAA3B,EAAkC;AAChC,WAAKC,QAAL;AAED;AAGJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,YAAY,EAAE,KAAKC,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAII;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBACK,KAAKZ,KAAL,CAAWR,YAAX,CAAwBqB,GAAxB,CAA6BhB,WAAD,iBAC/B,QAAC,WAAD;AAAa,UAAA,WAAW,EAAEA,WAA1B;AAAuC,UAAA,YAAY,EAAE,MAAM,KAAKD,YAAL,CAAkBC,WAAlB;AAA3D;AAAA;AAAA;AAAA;AAAA,gBADG;AADL;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWL;;AA7C2C;;AAiD9C,SAASiB,eAAT,CAAyBvB,KAAzB,EAAgC;AAC5B,SAAO;AAACC,IAAAA,YAAY,EAAED,KAAK,CAACC;AAArB,GAAP;AACD;;AAEH,eAAeT,UAAU,CAACC,OAAO,CAAC8B,eAAD,EAAkB;AAAC7B,EAAAA,cAAD;AAAiBG,EAAAA;AAAjB,CAAlB,CAAP,CAA8DC,qBAA9D,CAAD,CAAzB","sourcesContent":["import React, {Component} from 'react'\nimport {withRouter} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport addDestination from  '../actions/AddDestinations'\nimport Destination from '../Components/Destination'\nimport Form from '../Components/Form'\nimport fetchDestinations from '../actions/FetchDestinations'\n\nclass DestinationsContainer extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      destinations: [],\n      temperature: '',\n      distance: '',\n      gravity: ''\n    }\n  }\n\n\n    handleSubmit(destination) {\n      let newDestination = destination;\n      newDestination.itinerary_id = 2;\n      this.props.addDestination(newDestination)\n      this.props.history.push(\"/itinerary\")\n    }\n\n    handleSort(event){\n      event.preventDefault(); \n      debugger\n      this.props.fetchDestinations();\n      let allDests = this.props.destinations;\n        if (event.target.value === \"warm\"){\n          this.setState\n\n        }\n\n\n    }\n\n    render() {\n        return (\n          <div className=\"destComponentContainer\">\n            <div className=\"formContainer\">\n              <Form handleFilter={this.handleTempChange.bind(this)}/>\n            </div>\n              <div className=\"destContainer\">\n                  {this.props.destinations.map((destination) => \n                <Destination destination={destination} handleSubmit={() => this.handleSubmit(destination)}/>)}\n              </div>\n          </div>\n        )\n  }\n}\n\n\nfunction mapStateToProps(state) {\n    return {destinations: state.destinations}\n  }\n\nexport default withRouter(connect(mapStateToProps, {addDestination, fetchDestinations})(DestinationsContainer))"]},"metadata":{},"sourceType":"module"}