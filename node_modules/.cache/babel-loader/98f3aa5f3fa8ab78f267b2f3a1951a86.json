{"ast":null,"code":"var _jsxFileName = \"/home/aplahr/Development/code/p5/solar-travel-frontend/src/Destinations/DestinationsContainer.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport addDestination from '../actions/AddDestinations';\nimport Destination from '../Components/Destination';\nimport Form from '../Components/Form';\nimport fetchDestinations from '../actions/FetchDestinations';\nimport filterDestinations from '../actions/FilterDestinations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DestinationsContainer extends Component {\n  constructor() {\n    super();\n\n    this.handleFilterSubmit = event => {\n      debugger;\n      this.props.filterDestinations(this.state.temperature, this.state.gravity, this.state.distance);\n    };\n\n    this.state = {\n      destinations: [],\n      temperature: 'hot',\n      distance: 'closest',\n      gravity: 'heavy'\n    };\n  }\n\n  handleSubmit(destination) {\n    let newDestination = destination;\n    newDestination.itinerary_id = 2;\n    this.props.addDestination(newDestination);\n    this.props.history.push(\"/itinerary\");\n  }\n\n  handleFilter(eventValue, formType) {\n    this.setState({\n      [formType]: eventValue\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homeContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formContainer\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          handleFilter: (eventValue, formType) => this.handleFilter(eventValue, formType),\n          handleFilterSubmit: () => this.handleFilterSubmit(event)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"destContainer\",\n        children: this.props.filteredDestinations.map(destination => /*#__PURE__*/_jsxDEV(Destination, {\n          destination: destination,\n          handleSubmit: () => this.handleSubmit(destination)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    destinations: state.allDestinations.destinations,\n    filteredDestinations: state.allDestinations.filteredDestinations\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, {\n  addDestination,\n  fetchDestinations,\n  filterDestinations\n})(DestinationsContainer));","map":{"version":3,"sources":["/home/aplahr/Development/code/p5/solar-travel-frontend/src/Destinations/DestinationsContainer.js"],"names":["React","Component","withRouter","connect","addDestination","Destination","Form","fetchDestinations","filterDestinations","DestinationsContainer","constructor","handleFilterSubmit","event","props","state","temperature","gravity","distance","destinations","handleSubmit","destination","newDestination","itinerary_id","history","push","handleFilter","eventValue","formType","setState","render","filteredDestinations","map","mapStateToProps","allDestinations"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA4B,4BAA5B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AACA,OAAOC,kBAAP,MAA+B,+BAA/B;;;AAEA,MAAMC,qBAAN,SAAoCR,SAApC,CAA8C;AAE5CS,EAAAA,WAAW,GAAG;AACZ;;AADY,SAyBZC,kBAzBY,GAyBUC,KAAD,IAAW;AAC9B;AACA,WAAKC,KAAL,CAAWL,kBAAX,CAA8B,KAAKM,KAAL,CAAWC,WAAzC,EAAsD,KAAKD,KAAL,CAAWE,OAAjE,EAA0E,KAAKF,KAAL,CAAWG,QAArF;AACC,KA5BS;;AAEZ,SAAKH,KAAL,GAAa;AACXI,MAAAA,YAAY,EAAE,EADH;AAEXH,MAAAA,WAAW,EAAC,KAFD;AAGXE,MAAAA,QAAQ,EAAC,SAHE;AAIXD,MAAAA,OAAO,EAAC;AAJG,KAAb;AAMD;;AAECG,EAAAA,YAAY,CAACC,WAAD,EAAc;AACxB,QAAIC,cAAc,GAAGD,WAArB;AACAC,IAAAA,cAAc,CAACC,YAAf,GAA8B,CAA9B;AACA,SAAKT,KAAL,CAAWT,cAAX,CAA0BiB,cAA1B;AACA,SAAKR,KAAL,CAAWU,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACD;;AAEDC,EAAAA,YAAY,CAACC,UAAD,EAAaC,QAAb,EAAuB;AACjC,SAAKC,QAAL,CAAc;AACZ,OAACD,QAAD,GAAYD;AADA,KAAd;AAGD;;AAUDG,EAAAA,MAAM,GAAG;AACL,wBACA;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,YAAY,EAAE,CAACH,UAAD,EAAaC,QAAb,KAA0B,KAAKF,YAAL,CAAkBC,UAAlB,EAA8BC,QAA9B,CAA9C;AAAuF,UAAA,kBAAkB,EAAE,MAAM,KAAKhB,kBAAL,CAAwBC,KAAxB;AAAjH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADJ,eAIM;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBACK,KAAKC,KAAL,CAAWiB,oBAAX,CAAgCC,GAAhC,CAAqCX,WAAD,iBACvC,QAAC,WAAD;AAAa,UAAA,WAAW,EAAEA,WAA1B;AAAuC,UAAA,YAAY,EAAE,MAAM,KAAKD,YAAL,CAAkBC,WAAlB;AAA3D;AAAA;AAAA;AAAA;AAAA,gBADG;AADL;AAAA;AAAA;AAAA;AAAA,cAJN;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAWH;;AA7CyC;;AAiD9C,SAASY,eAAT,CAAyBlB,KAAzB,EAAgC;AAC5B,SAAO;AACLI,IAAAA,YAAY,EAAEJ,KAAK,CAACmB,eAAN,CAAsBf,YAD/B;AAELY,IAAAA,oBAAoB,EAAEhB,KAAK,CAACmB,eAAN,CAAsBH;AAFvC,GAAP;AAID;;AAEH,eAAe5B,UAAU,CAACC,OAAO,CAAC6B,eAAD,EAAkB;AAAC5B,EAAAA,cAAD;AAAiBG,EAAAA,iBAAjB;AAAoCC,EAAAA;AAApC,CAAlB,CAAP,CAAkFC,qBAAlF,CAAD,CAAzB","sourcesContent":["import React, {Component} from 'react'\nimport {withRouter} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport addDestination from  '../actions/AddDestinations'\nimport Destination from '../Components/Destination'\nimport Form from '../Components/Form'\nimport fetchDestinations from '../actions/FetchDestinations'\nimport filterDestinations from '../actions/FilterDestinations'\n\nclass DestinationsContainer extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      destinations: [],\n      temperature:'hot',\n      distance:'closest',\n      gravity:'heavy'\n    }\n  }\n  \n    handleSubmit(destination) {\n      let newDestination = destination;\n      newDestination.itinerary_id = 2;\n      this.props.addDestination(newDestination)\n      this.props.history.push(\"/itinerary\")\n    }\n    \n    handleFilter(eventValue, formType) {\n      this.setState({\n        [formType]: eventValue,\n      })\n    }\n\n    \n\n    handleFilterSubmit = (event) => {\n      debugger\n      this.props.filterDestinations(this.state.temperature, this.state.gravity, this.state.distance)\n      }\n\n\n    render() {\n        return (\n        <div className=\"homeContainer\">\n            <div className=\"formContainer\">\n              <Form handleFilter={(eventValue, formType) => this.handleFilter(eventValue, formType)} handleFilterSubmit={() => this.handleFilterSubmit(event)}/>\n            </div>\n              <div className=\"destContainer\">\n                  {this.props.filteredDestinations.map((destination) => \n                <Destination destination={destination} handleSubmit={() => this.handleSubmit(destination)}/>)}\n              </div>\n          </div>\n        )\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n      destinations: state.allDestinations.destinations,\n      filteredDestinations: state.allDestinations.filteredDestinations\n    }\n  }\n\nexport default withRouter(connect(mapStateToProps, {addDestination, fetchDestinations, filterDestinations})(DestinationsContainer))"]},"metadata":{},"sourceType":"module"}