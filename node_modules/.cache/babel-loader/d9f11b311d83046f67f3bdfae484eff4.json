{"ast":null,"code":"var _jsxFileName = \"/home/aplahr/Development/code/p5/solar-travel-frontend/src/Destinations/DestinationsContainer.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport addDestination from '../actions/AddDestinations';\nimport Destination from '../Components/Destination';\nimport Form from '../Components/Form';\nimport fetchDestinations from '../actions/FetchDestinations';\nimport { filterHotDestinations, filterWarmDestinations, filterColdDestinations, filterFrigidDestinations } from '../actions/FilterDestinations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DestinationsContainer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      destinations: []\n    };\n  }\n\n  handleSubmit(destination) {\n    let newDestination = destination;\n    newDestination.itinerary_id = 2;\n    this.props.addDestination(newDestination);\n    this.props.history.push(\"/itinerary\");\n  }\n\n  handleFilter(event) {\n    event.preventDefault();\n\n    switch (event.target.value) {\n      case \"any\":\n        return this.props.fetchDestinations();\n\n      case \"hot\":\n        return this.props.fetchDestinations() + this.props.filterHotDestinations();\n\n      case \"warm\":\n        return this.props.fetchDestinations() + this.props.filterWarmDestinations();\n\n      case \"cold\":\n        return this.props.fetchDestinations() + this.props.filterColdDestinations();\n\n      case \"frigid\":\n        return this.props.fetchDestinations() + this.props.filterFrigidDestinations();\n\n      default:\n        return this.props.destinations;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"homeContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formContainer\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          handleFilter: this.handleFilter.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"destContainer\",\n        children: this.props.destinations.map(destination => /*#__PURE__*/_jsxDEV(Destination, {\n          destination: destination,\n          handleSubmit: () => this.handleSubmit(destination)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    destinations: state.allDestinations.destinations\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, {\n  addDestination,\n  fetchDestinations,\n  filterHotDestinations,\n  filterWarmDestinations,\n  filterColdDestinations,\n  filterFrigidDestinations\n})(DestinationsContainer));","map":{"version":3,"sources":["/home/aplahr/Development/code/p5/solar-travel-frontend/src/Destinations/DestinationsContainer.js"],"names":["React","Component","withRouter","connect","addDestination","Destination","Form","fetchDestinations","filterHotDestinations","filterWarmDestinations","filterColdDestinations","filterFrigidDestinations","DestinationsContainer","constructor","state","destinations","handleSubmit","destination","newDestination","itinerary_id","props","history","push","handleFilter","event","preventDefault","target","value","render","bind","map","mapStateToProps","allDestinations"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA4B,4BAA5B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AACA,SAAQC,qBAAR,EAA+BC,sBAA/B,EAAuDC,sBAAvD,EAA+EC,wBAA/E,QAA8G,+BAA9G;;;AAEA,MAAMC,qBAAN,SAAoCX,SAApC,CAA8C;AAE5CY,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE;AADH,KAAb;AAGD;;AAGCC,EAAAA,YAAY,CAACC,WAAD,EAAc;AACxB,QAAIC,cAAc,GAAGD,WAArB;AACAC,IAAAA,cAAc,CAACC,YAAf,GAA8B,CAA9B;AACA,SAAKC,KAAL,CAAWhB,cAAX,CAA0Bc,cAA1B;AACA,SAAKE,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACD;;AAIDC,EAAAA,YAAY,CAACC,KAAD,EAAO;AACjBA,IAAAA,KAAK,CAACC,cAAN;;AACE,YAAQD,KAAK,CAACE,MAAN,CAAaC,KAArB;AACA,WAAK,KAAL;AACI,eAAO,KAAKP,KAAL,CAAWb,iBAAX,EAAP;;AACJ,WAAK,KAAL;AACE,eAAO,KAAKa,KAAL,CAAWb,iBAAX,KAAiC,KAAKa,KAAL,CAAWZ,qBAAX,EAAxC;;AACF,WAAK,MAAL;AACE,eAAO,KAAKY,KAAL,CAAWb,iBAAX,KAAiC,KAAKa,KAAL,CAAWX,sBAAX,EAAxC;;AACF,WAAK,MAAL;AACC,eAAO,KAAKW,KAAL,CAAWb,iBAAX,KAAiC,KAAKa,KAAL,CAAWV,sBAAX,EAAxC;;AACA,WAAK,QAAL;AACA,eAAO,KAAKU,KAAL,CAAWb,iBAAX,KAAiC,KAAKa,KAAL,CAAWT,wBAAX,EAAxC;;AACA;AACG,eAAO,KAAKS,KAAL,CAAWL,YAAlB;AAZJ;AAiBH;;AAEDa,EAAAA,MAAM,GAAG;AACL,wBACA;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,YAAY,EAAE,KAAKL,YAAL,CAAkBM,IAAlB,CAAuB,IAAvB;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADJ,eAIM;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kBACK,KAAKT,KAAL,CAAWL,YAAX,CAAwBe,GAAxB,CAA6Bb,WAAD,iBAC/B,QAAC,WAAD;AAAa,UAAA,WAAW,EAAEA,WAA1B;AAAuC,UAAA,YAAY,EAAE,MAAM,KAAKD,YAAL,CAAkBC,WAAlB;AAA3D;AAAA;AAAA;AAAA;AAAA,gBADG;AADL;AAAA;AAAA;AAAA;AAAA,cAJN;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAWL;;AApD2C;;AAwD9C,SAASc,eAAT,CAAyBjB,KAAzB,EAAgC;AAC5B,SAAO;AAACC,IAAAA,YAAY,EAAED,KAAK,CAACkB,eAAN,CAAsBjB;AAArC,GAAP;AACD;;AAEH,eAAeb,UAAU,CAACC,OAAO,CAAC4B,eAAD,EAAkB;AAAC3B,EAAAA,cAAD;AAAiBG,EAAAA,iBAAjB;AAAoCC,EAAAA,qBAApC;AAA2DC,EAAAA,sBAA3D;AAAmFC,EAAAA,sBAAnF;AAA2GC,EAAAA;AAA3G,CAAlB,CAAP,CAA+JC,qBAA/J,CAAD,CAAzB","sourcesContent":["import React, {Component} from 'react'\nimport {withRouter} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport addDestination from  '../actions/AddDestinations'\nimport Destination from '../Components/Destination'\nimport Form from '../Components/Form'\nimport fetchDestinations from '../actions/FetchDestinations'\nimport {filterHotDestinations, filterWarmDestinations, filterColdDestinations, filterFrigidDestinations} from '../actions/FilterDestinations'\n\nclass DestinationsContainer extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      destinations: [],\n    }\n  }\n\n\n    handleSubmit(destination) {\n      let newDestination = destination;\n      newDestination.itinerary_id = 2;\n      this.props.addDestination(newDestination)\n      this.props.history.push(\"/itinerary\")\n    }\n\n    \n    \n    handleFilter(event){\n      event.preventDefault();\n        switch (event.target.value) {\n        case \"any\":\n            return this.props.fetchDestinations()\n        case \"hot\":\n          return this.props.fetchDestinations() + this.props.filterHotDestinations()\n        case \"warm\":\n          return this.props.fetchDestinations() + this.props.filterWarmDestinations()\n        case \"cold\":\n         return this.props.fetchDestinations() + this.props.filterColdDestinations()\n         case \"frigid\":\n         return this.props.fetchDestinations() + this.props.filterFrigidDestinations()\n         default:\n            return this.props.destinations\n\n        }\n\n\n    }\n\n    render() {\n        return (\n        <div className=\"homeContainer\">\n            <div className=\"formContainer\">\n              <Form handleFilter={this.handleFilter.bind(this)}/>\n            </div>\n              <div className=\"destContainer\">\n                  {this.props.destinations.map((destination) => \n                <Destination destination={destination} handleSubmit={() => this.handleSubmit(destination)}/>)}\n              </div>\n          </div>\n        )\n  }\n}\n\n\nfunction mapStateToProps(state) {\n    return {destinations: state.allDestinations.destinations}\n  }\n\nexport default withRouter(connect(mapStateToProps, {addDestination, fetchDestinations, filterHotDestinations, filterWarmDestinations, filterColdDestinations, filterFrigidDestinations})(DestinationsContainer))"]},"metadata":{},"sourceType":"module"}