{"ast":null,"code":"var _jsxFileName = \"/home/aplahr/Development/code/p5/solar-travel-frontend/src/Destinations/DestinationsContainer.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport fetchDestinations from '../actions/FetchDestinations';\nimport fetchAddedDestinations from '../actions/FetchAddedDestinations';\nimport addDestination from '../actions/AddDestinations';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass DestinationsContainer extends Component {\n  constructor() {\n    super();\n    this.state = {\n      destinations: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchDestinations();\n    this.props.fetchAddedDestinations();\n  }\n\n  handleSubmit(destination) {\n    let newDestination = destination;\n    newDestination.itinerary_id = 2;\n    this.props.addDestination(newDestination);\n    this.props.history.push(\"/itinerary\");\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"destContainer\",\n      children: this.props.destinations.map((destination, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"destination\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: destination.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"destImage\",\n          src: destination.image_url,\n          alt: destination.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"destButton\",\n          onClick: () => this.handleSubmit(destination),\n          children: \"Add Location to Itinerary!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, destination.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this);\n  }\n\n} // list={this.state.lists.find(list => list.id === parseInt(routerProps.match.params.id))}\n// <Route path=\"/lists/new\" render={(routerProps) => <ListForm sendData={this.updateState} {...routerProps}/>}/>\n\n\nfunction mapStateToProps(state) {\n  return {\n    destinations: state.destinations\n  };\n}\n\nexport default withRouter(connect(mapStateToProps, {\n  fetchDestinations,\n  fetchAddedaddDestination\n})(DestinationsContainer));","map":{"version":3,"sources":["/home/aplahr/Development/code/p5/solar-travel-frontend/src/Destinations/DestinationsContainer.js"],"names":["React","Component","withRouter","connect","fetchDestinations","fetchAddedDestinations","addDestination","DestinationsContainer","constructor","state","destinations","componentDidMount","props","handleSubmit","destination","newDestination","itinerary_id","history","push","render","map","i","name","image_url","id","mapStateToProps","fetchAddedaddDestination"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AACA,OAAOC,sBAAP,MAAmC,mCAAnC;AACA,OAAOC,cAAP,MAA4B,4BAA5B;;;AAEA,MAAMC,qBAAN,SAAoCN,SAApC,CAA8C;AAE5CO,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,YAAY,EAAE;AAAf,KAAb;AACD;;AAECC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWR,iBAAX;AACA,SAAKQ,KAAL,CAAWP,sBAAX;AACH;;AAEDQ,EAAAA,YAAY,CAACC,WAAD,EAAc;AACxB,QAAIC,cAAc,GAAGD,WAArB;AACAC,IAAAA,cAAc,CAACC,YAAf,GAA8B,CAA9B;AACA,SAAKJ,KAAL,CAAWN,cAAX,CAA0BS,cAA1B;AACA,SAAKH,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACD;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACK,KAAKP,KAAL,CAAWF,YAAX,CAAwBU,GAAxB,CAA4B,CAACN,WAAD,EAAcO,CAAd,kBAC3B;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACI;AAAA,oBAAKP,WAAW,CAACQ;AAAjB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,WAAf;AAA2B,UAAA,GAAG,EAAER,WAAW,CAACS,SAA5C;AAAuD,UAAA,GAAG,EAAET,WAAW,CAACQ;AAAxE;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,UAAA,SAAS,EAAC,YAAlB;AAA+B,UAAA,OAAO,EAAE,MAAM,KAAKT,YAAL,CAAkBC,WAAlB,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA,SAAkCA,WAAW,CAACU,EAA9C;AAAA;AAAA;AAAA;AAAA,cADD;AADL;AAAA;AAAA;AAAA;AAAA,YADF;AAWH;;AA9ByC,C,CAkC9C;AACA;;;AAEA,SAASC,eAAT,CAAyBhB,KAAzB,EAAgC;AAC5B,SAAO;AAACC,IAAAA,YAAY,EAAED,KAAK,CAACC;AAArB,GAAP;AACD;;AAEH,eAAeR,UAAU,CAACC,OAAO,CAACsB,eAAD,EAAkB;AAACrB,EAAAA,iBAAD;AAAoBsB,EAAAA;AAApB,CAAlB,CAAP,CAAwEnB,qBAAxE,CAAD,CAAzB","sourcesContent":["import React, {Component} from 'react'\nimport {withRouter} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport fetchDestinations from '../actions/FetchDestinations'\nimport fetchAddedDestinations from '../actions/FetchAddedDestinations'\nimport addDestination from  '../actions/AddDestinations'\n\nclass DestinationsContainer extends Component {\n\n  constructor() {\n    super()\n    this.state = {destinations: []}\n  }\n\n    componentDidMount() {\n        this.props.fetchDestinations()\n        this.props.fetchAddedDestinations()\n    }\n\n    handleSubmit(destination) {\n      let newDestination = destination;\n      newDestination.itinerary_id = 2;\n      this.props.addDestination(newDestination)\n      this.props.history.push(\"/itinerary\")\n    }\n    render() {\n        return (\n          <div className=\"destContainer\">\n              {this.props.destinations.map((destination, i) => \n                <div className=\"destination\" key={destination.id}>\n                    <h2>{destination.name}</h2>\n                    <img className=\"destImage\" src={destination.image_url} alt={destination.name}></img>\n                    <button className=\"destButton\" onClick={() => this.handleSubmit(destination)}>Add Location to Itinerary!</button>\n                    </div>\n                 )}\n          </div>\n        )\n    }\n\n}\n\n// list={this.state.lists.find(list => list.id === parseInt(routerProps.match.params.id))}\n// <Route path=\"/lists/new\" render={(routerProps) => <ListForm sendData={this.updateState} {...routerProps}/>}/>\n\nfunction mapStateToProps(state) {\n    return {destinations: state.destinations}\n  }\n\nexport default withRouter(connect(mapStateToProps, {fetchDestinations, fetchAddedaddDestination})(DestinationsContainer))"]},"metadata":{},"sourceType":"module"}